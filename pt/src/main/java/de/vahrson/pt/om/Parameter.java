package de.vahrson.pt.om;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;

import org.apache.torque.om.Persistent;
import org.apache.torque.util.Criteria;

/**
 * The skeleton for this class was autogenerated by Torque on:
 * 
 * [Thu Mar 03 00:16:53 CET 2005]
 * 
 * You should add additional methods to this class to meet the application
 * requirements. This class will only be generated as long as it does not
 * already exist in the output directory.
 */
public class Parameter extends de.vahrson.pt.om.BaseParameter implements Persistent {
	public String toString() {
		return getParameterKey() + "=" + getParameterValue();
	}

	public static List listDefaultParameters() throws Exception {
		List pdes= ParameterDescriptionPeer.doSelect(new Criteria());
		List answer= new ArrayList();
		for (Iterator i= pdes.iterator(); i.hasNext();) {
			ParameterDescription pd= (ParameterDescription) i.next();
			// create a mock Parameter
			Parameter p= new Parameter();
			p.setParameterKey(pd.getParameterKey());
			p.setParameterValue(pd.getDefaultValue());
			answer.add(p);
		}
		return answer;
	}

	public static class SameKeyComparator implements Comparator {

		/*
		 * (non-Javadoc)
		 * 
		 * @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
		 */
		public int compare(Object o1, Object o2) {
			Parameter p1= (Parameter) o1;
			Parameter p2= (Parameter) o2;
			return p1.getParameterKey().compareTo(p2.getParameterKey());
		}
	}
}